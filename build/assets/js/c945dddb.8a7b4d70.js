"use strict";(self.webpackChunkgreenleaze_docs=self.webpackChunkgreenleaze_docs||[]).push([[580],{783:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>s,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var n=r(4848),i=r(8453);const o={sidebar_position:2,sidebar_label:"Implement with the API"},s="API",a={id:"api-implement",title:"API",description:"The REST API makes it able to retrieve prices rules from GreenLeaze, create an order and then follow the order status.",source:"@site/docs/api-implement.mdx",sourceDirName:".",slug:"/api-implement",permalink:"/docs/api-implement",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Implement with the API"},sidebar:"tutorialSidebar",previous:{title:"Before you start",permalink:"/docs/intro"},next:{title:"Implement with Shopify",permalink:"/docs/shopify-implement"}},d={},l=[{value:"How the GreenLeaze Payment Path Integration Works",id:"how-the-greenleaze-payment-path-integration-works",level:2},{value:"API Authentication",id:"api-authentication",level:2},{value:"Pricing Rules",id:"pricing-rules",level:2},{value:"Get Pricing Rules",id:"get-pricing-rules",level:3},{value:"Change Pricing Rules",id:"change-pricing-rules",level:3},{value:"Send data to GreenLeaze",id:"send-data-to-greenleaze",level:2},{value:"Step 1 : Send the order to pay.greenleaze.com",id:"step-1--send-the-order-to-paygreenleazecom",level:3},{value:"Step 2 : Redirect the customer to pay.greenleaze.com",id:"step-2--redirect-the-customer-to-paygreenleazecom",level:3},{value:"Step 3 : Listen for the customer payment",id:"step-3--listen-for-the-customer-payment",level:3},{value:"Ressources",id:"ressources",level:2}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components},{Details:o}=t;return o||function(e,t){throw new Error("Expected "+(t?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"api",children:"API"}),"\n",(0,n.jsx)(t.p,{children:"The REST API makes it able to retrieve prices rules from GreenLeaze, create an order and then follow the order status."}),"\n",(0,n.jsx)(t.h2,{id:"how-the-greenleaze-payment-path-integration-works",children:"How the GreenLeaze Payment Path Integration Works"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsx)(t.li,{children:"The store retrieves the pricing rules from GreenLeaze."}),"\n",(0,n.jsx)(t.li,{children:"The store displays the pricings to the custome in the way he wants to."}),"\n",(0,n.jsx)(t.li,{children:"The store sends a request containing data in JSON to GreenLeaze to create an order."}),"\n",(0,n.jsx)(t.li,{children:"The store redirects the customer to GreenLeaze to complete the order."}),"\n",(0,n.jsx)(t.li,{children:"GreenLeaze processes the order and sends the customer back to the store."}),"\n",(0,n.jsx)(t.li,{children:"The store sends a request to GreenLeaze to give the unique order id (id_commande) to finalize the order."}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"api-authentication",children:"API Authentication"}),"\n",(0,n.jsxs)(t.p,{children:["All requests to the API must be authenticated with an API key. The API key must be included in the ",(0,n.jsx)(t.code,{children:"X-API-KEY"})," header of the request. This token is unique to your shop and must be kept secret."]}),"\n",(0,n.jsx)(t.h2,{id:"pricing-rules",children:"Pricing Rules"}),"\n",(0,n.jsx)(t.h3,{id:"get-pricing-rules",children:"Get Pricing Rules"}),"\n",(0,n.jsxs)(o,{children:[(0,n.jsx)("summary",{children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"GET https://new.api.greenleaze.com/v1/price-rules\n"})})}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",metastring:'title="Request response"',children:'[\n  //...\n  {\n    "id": 30,\n    "name": "0 2000 1 mois",\n    "rule": "(1.2* [[prixHT]] /11.9) + (1.2-[[tva]])*[[prixHT]]/11.9", // [[tva]] represent the taxes of the product - Used to calculate the monthly price\n    "depositRule": "(1.2* [[prixHT]] /11.9) + (1.2-[[tva]])*[[prixHT]]/11.9", // [[tva]] represent the taxes of the product - Used for first payment\n    "minPrice": "0.00", // This is the price without taxes !\n    "maxPrice": "2000.00", // This is the price without taxes !\n    "duration": 6 // Can be 1, 6, 12, 18 or 24 months depending on the contract with GreenLeaze\n}\n//...\n]\n\n'})})]}),"\n",(0,n.jsxs)(t.p,{children:["The request returns all rules concerning your shop. A rule applies to all products whose price is between ",(0,n.jsx)(t.strong,{children:"minPrice"})," and ",(0,n.jsx)(t.strong,{children:"maxPrice"})," and for the corresponding duration."]}),"\n",(0,n.jsx)(t.p,{children:"From all the rules you are able to let your customer choose his duration and the corresponding price will be calculated according to the rule. If the product is not in the range of any rule, the product is not egilageable for GreenLeaze Renting."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Please store the rules in user session to avoid multiple requests to the API. It will improve user experience for all customers."})}),"\n",(0,n.jsx)(t.h3,{id:"change-pricing-rules",children:"Change Pricing Rules"}),"\n",(0,n.jsx)(t.p,{children:"You can not change the pricing rules with the API. If you need to change the pricing rules, please contact us."}),"\n",(0,n.jsx)(t.h2,{id:"send-data-to-greenleaze",children:"Send data to GreenLeaze"}),"\n",(0,n.jsx)(t.h3,{id:"step-1--send-the-order-to-paygreenleazecom",children:"Step 1 : Send the order to pay.greenleaze.com"}),"\n",(0,n.jsx)(t.p,{children:"Once your customer has made his order on your website, you must send the order to GreenLeaze to create the order."}),"\n",(0,n.jsxs)(o,{children:[(0,n.jsx)("summary",{children:(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"\nPOST https://pay.greenleaze.com/send-shop-order-data\n\n"})})}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",metastring:'title="Request body"',children:'[\n  //...\n  {\n    "transactionId": "",// (String, Required) : Random generated id. Used by pay.greenleaze.com to associate all data to the transaction_id spectified in the redirection URL of the customer.\n    "shop": "", //(Object, Required) : Shops informations.\n    "urls": [], //(Object, Required) : All shop\'s URL  See below for the URL format.\n    "shop": "", // (String, Required) :  principal URL of the shop, format domain.extension (ex: amazon.fr or fnac.com).\n    "success": "", // (String, Required) : redirection URL in case of paiement success.\n    "failure": "", // (String, Required) : redirection URL in case of paiement failure.\n    "language": "", // (String, Required) : Langage used by the shop - iso format (ex: fr or en).\n    "customer": "", // (Object, Optional) : Info about the customer.\n    "firstName": "", // (String, Optional) : Customer\'s firstname.\n    "lastName": "", // (String, Optional) : Customer\'s lastname.\n    "company": "", // (String, Optional) : Society of client, can be null.\n    "email": "", // (String, Optional) : Email of the customer.\n    "deliveryOptions": [\n       // ...\n    ], // (Array, Optional) : List of delivery options - See below for the delivery option format.\n    "addresses": [\n      // ...\n    ], // (Array, Optional) : Address of the customer - See below for the address format.\n    "products": [\n      // ...\n    ], // (Array, Required) : List of products ordered by the customer - See below for the product format.\n    "cartId": "", // (String, Required) : Cart id.\n    "cartSecureKey": "", // (String, Required) : Cart secure key.\n    "totalInitialFees": 0.00 // (Float, Required) : Initial fees : mainly delivery fees, but also assembly or file fees if any...\n  }\n]\n'})}),(0,n.jsxs)(t.p,{children:["It is necessary to provide both a delivery address and an invoice address. In the case where they are the same, you must reverse the values of delivery and invoice by adjusting ",(0,n.jsx)(t.code,{children:"true"})," and ",(0,n.jsx)(t.code,{children:"false"})," respectively."]}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",metastring:'title="Address format"',children:'{\n  "country": "", // (String, Required) : Country code of the address.\n  "company": "", // (String, Optional) : Company name (can be empty).\n  "firstName": "", // (String, Required) : First name associated with the address.\n  "lastName": "", // (String, Required) : Last name associated with the address.\n  "street": "", // (String, Required) : Street of the address.\n  "postCode": "", // (String, Required) : Postal code of the address.\n  "city": "", // (String, Required) : City of the address.\n  "phone": "", // (String, Required) : Phone number associated with the address.\n  "delivery": true, // (Boolean, Required) : Indicates if the address is for delivery.\n  "invoice": false // (Boolean, Required) : Indicates if the address is for billing.\n}\n'})}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",metastring:'title="Product format"',children:'{\n  "name": "", // (String, Required) : Name of the product.\n  "unitPrice": 0, // (Integer, Required) : Unit price of the product. Without taxes !\n  "vat": 0, // (Integer, Required) : VAT applicable on the product.\n  "quantity": 0, // (Integer, Required) : Quantity ordered of the product.\n  "combination": {\n    "name": "" // (String, Required) : Description of the combination. If single product without declination put the product name.\n  },\n  "imageUrl": "", // (String, Required) : URL of the product image.\n  "disabled": false, // (Boolean, Required) : Indicates if the product is disabled for GreenLeaze Renting, if true the product will be payed in one time on GreenLeaze.\n  "id": "" // (String, Optional) : Id of the product, will be used to delete One unit of the product from the recap of the order.\n}\n'})}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",metastring:'title="Delivery option format"',children:'{\n  "id": "", // (String, Required) : Id of the delivery option.\n  "name": "", // (String, Required) : Name of the delivery option.\n  "price": 0, // (Integer, Required) : Price of the delivery option.\n  "description": "" // (String, optional) : Description of the delivery option.\n}\n'})}),(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",metastring:'title="Urls format"',children:'{\n  "failure": "", // (String, Required) : Url where the customer will be redirected in case of payment failure.\n  "success": "", // (String, Required) : Url called with POST in case of success and where the user is redirected after\n  "sendData": "", // (String, Optional) : Url called with PATCH (with the json data) to send the customer data before the end of the payment process.\n  "deleteProduct": "" // (String, optional) : Url call with PATCH (with the json data) to delete one unit of a the product with the id specified in the product format. You must specify the id of the product in the product format to use it.\n}\n'})}),(0,n.jsx)(t.p,{children:"Note : The delivery options are optional but allows you to display the delivery options on the GreenLeaze payment page, GreenLeaze will only store the final delivery price."})]}),"\n",(0,n.jsx)(t.h3,{id:"step-2--redirect-the-customer-to-paygreenleazecom",children:"Step 2 : Redirect the customer to pay.greenleaze.com"}),"\n",(0,n.jsx)(t.p,{children:"Once the order has been sent to GreenLeaze, you must redirect the customer to the GreenLeaze payment page, the previous request will return the URL to redirect the customer.\nYou must redirect the customer to the URL returned by the previous request."}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"POST https://pay.greenleaze.com/order/step-1?transaction_id={transactionId}&duration={duration}"}),"\nBe sure to replace ",(0,n.jsx)(t.code,{children:"{transactionId}"})," by the transactionId you have sent in the previous request.\nThe ",(0,n.jsx)(t.code,{children:"duration"})," parameter is the duration of the rental in months, it is optional but ables to preselect the duration on the GreenLeaze payment page."]}),"\n",(0,n.jsx)(t.h3,{id:"step-3--listen-for-the-customer-payment",children:"Step 3 : Listen for the customer payment"}),"\n",(0,n.jsx)(t.p,{children:"Once the customer has completed the payment, he will be redirected to the (success) URL you have provided in the request to create the order.\nA post request will be sent to the (success) URL with the following parameters in the body :"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"number-of-months"}),' : Indicates the duration of the rental in months. This information allows you to define the appropriate status for the order on your shop, such as "GreenLeaze Rent 24 months".']}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"cart-secure-key"})," : Unique identifier of the cart or order, which you will have included in the JSON data sent. This identifier, which is unknown to the customer, must match exactly the one recorded on your shop to avoid fraudulent validation of the order. In case of divergence between the cart-secure-key sent and the one received, the order should not be validated."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"cart-id"})," : Used to validate the order with reference to the cart ID."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"then the customer will be redirected on the same Url (GET request with no parameters except the greenleaze-subscription-id)"}),"\n",(0,n.jsx)(t.h2,{id:"ressources",children:"Ressources"}),"\n",(0,n.jsxs)(t.p,{children:["Here is a JSON file exemple for step 2 : ",(0,n.jsx)(t.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:r(1118).A+"",children:"download"})]})]})}function h(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1118:(e,t,r)=>{r.d(t,{A:()=>n});const n=r.p+"assets/files/exemple-b8199695df1d27c747a0b6b01927e9aa.json"},8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>a});var n=r(6540);const i={},o=n.createContext(i);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);